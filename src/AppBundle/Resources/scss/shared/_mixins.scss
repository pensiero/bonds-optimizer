@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin avoid-select() {
  -webkit-user-select: none;
  -moz-user-select: none;
  -khtml-user-select: none;
  -ms-user-select: none;
}

@mixin shadow($value) {
  -webkit-box-shadow: $value;
  box-shadow: $value;
}

@mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: -o-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

@function unfoldTransition($transition) {
  // Default values
  $property: all;
  $duration: $transitionTiming;
  $easing: $transitionFunction;
  $delay: null; // Browser default is 0, which is what we want
  $defaultProperties: ($property, $duration, $easing, $delay);

  // Grab transition properties if they exist
  $unfoldedTransition: ();
  @for $i from 1 through length($defaultProperties) {
    $p: null;
    @if $i <= length($transition) {
      $p: nth($transition, $i)
    } @else {
      $p: nth($defaultProperties, $i)
    }
    $unfoldedTransition: append($unfoldedTransition, $p);
  }

  @return $unfoldedTransition;
}

@mixin transition($transitions...) {
  $unfoldedTransitions: ();
  @each $transition in $transitions {
    $unfoldedTransitions: append($unfoldedTransitions, unfoldTransition($transition), comma);
  }
  -webkit-transition: $unfoldedTransitions;
  transition: $unfoldedTransitions;
}

@mixin transitionDelay($seconds: 2s) {
  -webkit-transition-delay: $seconds;
  transition-delay: $seconds;
}

@mixin animation($name, $duration, $function) {
  -webkit-animation: $name $duration;
  animation: $name $duration;
  -webkit-animation-timing-function: $function;
  animation-timing-function: $function;
}

@mixin transform($value) {
  -webkit-transform: $value;
  -moz-transform:    $value;
  -ms-transform:     $value;
  -o-transform:      $value;
  transform:         $value;
}

@mixin elisionable() {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

@mixin vAlignMiddle() {
  position: absolute;
  top: 50%;
  @include transform(translate(0, -50%));
}

@mixin oAlignMiddle() {
  position: absolute;
  left: 50%;
  @include transform(translate(-50%, 0));
}

@mixin voAlignMiddle() {
  position: absolute;
  top: 50%;
  left: 50%;
  @include transform(translate(-50%, -50%));
}